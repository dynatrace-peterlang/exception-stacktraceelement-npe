/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.dynatrace;

import java.util.HashMap;
import java.util.Map;
import java.util.function.Supplier;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println("java.vm.name:    \"" + System.getProperty("java.vm.name") + "\"");
        System.out.println("java.vm.vendor:  \"" + System.getProperty("java.vm.vendor") + "\"");
        System.out.println("java.vm.version: \"" + System.getProperty("java.vm.version") + "\"");
        System.out.println("java.version:    \"" + System.getProperty("java.version") + "\"");
        System.out.println("java.vendor:     \"" + System.getProperty("java.vendor") + "\"");
        System.out.println();

        try {
            Supplier<Exception> s = () -> new Exception("To Test stacktrace capturing");
            Exception test = s.get();

            StackTraceElement[] stackTraceElements = test.getStackTrace();

            int value = 0;
            Map<StackTraceElement, Integer> map = new HashMap<>();
            for (StackTraceElement e : stackTraceElements) {
                Integer integer = map.get(e);
                if (integer == null) {
                    map.put(e, value++);
                }
            }
            System.out.println("Everything worked. Expected exception for IBM Semeru Java 11 not thrown");
        } catch (NullPointerException e) {
            System.out.println("Unexpected NPE thrown in StackTraceElement.hashCode");
            e.printStackTrace(System.out);
        }
    }
}
